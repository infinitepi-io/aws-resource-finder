name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  packages: write

jobs:
  release:
    runs-on: ubuntu-latest
    env:
      BINARY_NAME: aws-resource-finder
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '>=1.20.0'
          cache: true
      
      - name: Install dependencies
        run: go mod download

      - name: Verify code
        run: |
          go vet ./...
          go test ./... -v

      - name: Build Binaries
        run: |
          mkdir -p release
          make build-all
          # Create directories for each platform
          for platform in linux-amd64 linux-arm64 darwin-amd64 darwin-arm64 windows-amd64; do
            mkdir -p "release/$platform"
            if [[ $platform == windows* ]]; then
              binary_name="$BINARY_NAME-$platform.exe"
            else
              binary_name="$BINARY_NAME-$platform"
            fi
            # Copy binary with proper extension
            cp "bin/$binary_name" "release/$platform/"
            # Copy required assets
            cp -r template "release/$platform/"
            cp -r config "release/$platform/"
          done

          # Generate checksums for each binary
          cd release
          for platform in */; do
            platform=${platform%/}
            cd "$platform"
            if [[ $platform == windows* ]]; then
              sha256sum "$BINARY_NAME-$platform.exe" > checksums.txt
            else
              sha256sum "$BINARY_NAME-$platform" > checksums.txt
            fi
            cd ..
          done

          # Create archives
          for platform in */; do
            platform=${platform%/}
            if [[ $platform == windows* ]]; then
              zip -r "$BINARY_NAME-$platform.zip" "$platform"/*
            else
              tar czf "$BINARY_NAME-$platform.tar.gz" "$platform"/*
            fi
          done

          # Generate overall checksums for archives
          sha256sum $BINARY_NAME-*.{zip,tar.gz} > checksums.txt

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            release/${{ env.BINARY_NAME }}-*.zip
            release/${{ env.BINARY_NAME }}-*.tar.gz
            release/checksums.txt
          draft: false
          prerelease: false
          generate_release_notes: true
          fail_on_unmatched_files: true
          body: |
            ## AWS Resource Finder ${{ github.ref_name }}
            
            This release includes binaries for:
            - Linux (amd64, arm64)
            - macOS (amd64, arm64)
            - Windows (amd64)
            
            Each archive contains:
            - Binary executable
            - Template files
            - Configuration files
            - Binary checksum file (checksums.txt)
            
            ### SHA256 Checksums
            Archive checksums are provided in the checksums.txt file.
            Each archive also contains its own checksums.txt for binary verification.
            
            ### Installation
            1. Download the appropriate archive for your platform
            2. Extract the contents
            3. Verify the binary using checksums.txt
            4. Run the binary
            
            For detailed instructions, see the README.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Check Release Assets
        run: |
          echo "Verifying release assets..."
          cd release
          for ext in zip tar.gz; do
            for file in $BINARY_NAME-*.$ext; do
              if [ ! -f "$file" ]; then
                echo "❌ Missing release asset: $file"
                exit 1
              else
                echo "✅ Found release asset: $file"
              fi
            done
          done